Day 1
# Provision a Remote Docker Host
docker-machine create m-docker \
	--driver digitalocean \
	--digitalocean-access-token=f08087c666db1a0e9eada4a4251deb5bd837ce361f21f5ea8965d5e6f44ea9bb \
	--digitalocean-size=s-1vcpu-2gb \
	--digitalocean-image=ubuntu-18-04-x64 \
	--digitalocean-region=sgp1

# Connect to Remote Docker Daemon
$ docker-machine env m-docker
	export DOCKER_TLS_VERIFY="1"
	export DOCKER_HOST="tcp://178.128.97.198:2376"
	export DOCKER_CERT_PATH="/home/user/.docker/machine/machines/m-docker"
	export DOCKER_MACHINE_NAME="m-docker"
	# Run this command to configure your shell: 
	# eval $(docker-machine env m-docker)

# tag with git commit hash
docker build -t dockerhubuser/image:$(git rev-parse --short HEAD) .
# multiple tags for same image
docker tag dockerhubuser/image:gitcommithash dockerhubuser/image:v1

echo $? for linux return code for prev command

Day 2
export KUBECONFIG=$(pwd)/m-k8-kubeconfig.yaml
86488  ll $KUBECONFIG
86489  kubectl version
86490  kubectl get nodes
86494  kubectl get nodes -o wide

86492  kubectl get nodes pool-2bwpoxkvr-3ckck -o wide

86496  kubectl describe nodes/pool-2bwpoxkvr-3ckck
86497  kubectl get nodes pool-2bwpoxkvr-3ckck -o yaml
86498  kubectl get nodes -o yaml
86499  kubectl cluster-info
86500  kubectl get ns
86501  kubectl get pod
86502  kubectl get pod -n kube-public
86503  kubectl get pod -n kube-system
86505  kubectl get all -A
86508  kubectl describe pod/cilium-6l2cs -n kube-system
86509  kubectl create ns myns
86510  kubectl get ns
86511  cd -
86514  kubectl delete ns/myns

Day 3
helm install nginx-ingress stable/nginx-ingress --version 1.37.0 -n nginx-ingress
minikube addons list
helm list -A
helm uninstall <name>
kubectl top nodes # see if any metric server running
kubectl api-resources | grep hpa
siege -c20 -v http://nwapp.167.172.6.184.nip.io/

Day 4
kubectl scale deploy/fortune-deploy -n myns --replicas=3 --record
kubectl rollout history deploy/nwdb-deploy -n nwapp
kubectl rollout undo deployment deploy/nwapp-deploy -n nwapp --to-revision=1
kubectl rollout status deploy/nwapp-deploy -n nwapp
kubectl set image deploy/nwapp-deploy -n nwapp-container=stackupiss/northwind-app:v2

kubectl get ing -A
helm uninstall nginx-ingress -n nginx-ingress
helm repo add presslabs https://presslabs.github.io/charts
helm repo update
helm install nginx-ingress stable/nginx-ingress --version 1.37.0 -n nginx-ingress -f values.yml
kubectl ingress-nginx info -n nginx-ingress --service nginx-ingress-controller
helm install mysql-operator presslabs/mysql-operator --version 0.4.0-rc.1 -n mysql-operator
kubectl top nodes
kubectl api-resources
kubectl cp 0-northwind-default-current-timestamp.sql nwapp/nwdb-mysql-0:/tmp -c mysql

/home/user/.istioctl/bin/istioctl manifest apply --set profile=demo
kubectl label ns/default istio-injection=enabled
kubectl label ns/default istio-injection-
kube-inject -f bookinfo-ingress.yaml | kubectl apply -f -
